"""""""""""""""""""
"HINTS
"""""""""""""""""""
"r !ls -R -- get output of ls and put it to buffer
"au BufRead,BufNewFile */.aspx/* setfiletype html

"----------------------------------------------
"------------DOC HOW TO TEST SCENARIO----------
"----------------------------------------------
"help feature-list  - all fiches list!
"also, if you want to test something,write:
"if has("gui_win32") (alt-enter)
"echo 0 (alt-enter)
"else (alt-enter)
"echo 1


""""""""""""""""
"TAGS NAVIGATION
""""""""""""""""
"ta nameOfFunction <cr>
"ta /^chk_  - go to function started from chk_ ....
"cntrl + ] - go to function (cursor is on function)
"cntrl + t - back from function to last page
"


"------------------------------------------------
""PLUGINS DEPENDENCY 
"------------------------------------------------
"mru.vim
"minibufexpl.vim
"NERD_commenter.vim
"MyJustify.vim
"DirDiff.txt
"cpp.vim
"c.vim
"fonts dir (monospace)
""omni completion(not use)


"--------------------------------------------------
"COOL TIPS, INFORMATION
"--------------------------------------------------------------

"RECORDING MACROS
"# Recording (BEST TIP of ALL)
"# Operating a Recording on a Visual BLOCK
"1) define recording/register
"qq:s/ to/ from/g^Mq
"2) Define Visual BLOCK
"V}
"3) hit : and the following appears
":'<,'>
"4)Complete as follows
":'<,'>norm @q

"VISUAL MODE TRICKS
"# Visual is the newest and usually the BEST editting mode
"# Visual basics
"v                               : enter visual mode
"V                               : visual mode whole line
"<C-V>                           : enter VISUAL BLOCK mode
"gv                              : reselect last visual area
"o                               : navigate visual area
""*y                             : yank visual area into paste buffer
"V%                              : visualise what you match
"V}J                             : Join Visual block (great)
"----------------------------------------


"[I     : show lines matching word under cursor <cword> (super) count size
"----------------------------------------
"# Conventional Shifting/Indenting
":'a,'b>>
"# visual shifting (builtin-repeat)
":vnoremap < <gv
":vnoremap > >gv
"# Block shifting (magic)
">i{
">a{
"# also
">% and <%

" tab complete now ignores these
"set wildignore=*.o,*.obj,*.bak,*.exe 
"--------------------------------------------------------------------------------------------------

""COPY|PASTE|CUT|COPY ALL
"<Ctrl-X> -- cut (goto visual mode and cut)
"imap <C-X> <C-O>vgG
"vmap <C-X> "*x<Esc>i
"<Ctrl-C> -- copy (goto visual mode and copy)
"imap <C-C> <C-O>vgG
"vmap <C-C> "*y<Esc>i

"<Ctrl-A> -- copy all
"imap <C-A> <C-O>gg<C-O>gH<C-O>G<Esc>
"vmap <C-A> <ESC>gggH<C-O>G<Esc>i

"<Ctrl-V> -- paste
"nm \\paste\\ "=@*.'xy'<CR>gPFx"_2x:echo<CR>
"imap <C-V> x<Esc>\\paste\\"_s
"vmap <C-V> "-cx<Esc>\\paste\\"_x </pre>))

" C-c and C-v - Copy/Paste in global clipboard
" C-c and C-v - Copy/Paste in global clipboard

"vmap <C-C> "+yi
"imap <C-Ins> <esc>"+yi

"imap <C-V> <esc>"+gPi
"imap <S-Ins> <esc>"+gPi
"block insert mode
"imap <Ins> <Esc>i

" add [] macros
"imap [ []<LEFT>

"\] - put (); to the end of line
"map \] $a();<CR>
"imap \] <Esc>$a();<CR>
"vmap \] <Esc>$a();<CR>

"\[ - put () only where cursor
"map \[ a()<LEFT>
"imap \[ ()<LEFT>
"vmap \[ ()()<LEFT>

"fold
"cscope
"cl or _cl
"C - N
"spell checker
"
"MAP OF HEX CHARACTERS
""map <c-r> <char-0xE8>

"help references"
"verbose set encoding


