" A B B R E V I A T I O N S 

"
abbr #b /************************************************************************
abbr #e  ************************************************************************/

abbr hosts C:\WINNT\system32\drivers\etc\hosts

" abbreviation to manually enter a timestamp. Just type YTS in insert mode 

iab YTS <C-R>=TimeStamp()<CR>

" Date/Time stamps
" %a - Day of the week
" %b - Month

" %d - Day of the month
" %Y - Year
" %H - Hour
" %M - Minute
" %S - Seconds
" %Z - Time Zone

iab YDATETIME <c-r>=strftime(": %a %b %d, %Y %H:%M:%S %Z")<cr>


" ************************************************************************


//--------------------------------------------------------------------
"VARIABLES DESCR"

let name = "Damian"

let height = 165

let interests = [ 'Cinema', 'Literature', 'World Domination', 101 ]

let phone     = { 'cell':5551017346, 'home':5558038728, 'work':'?' }

Таблица 2. Псевдопеременные Vimscript
Префикс 	Значение
& имя_переменной 	параметр Vim (локальный, если указана соответствующая опция, иначе глобальный)
&l: имя_переменной 	локальный параметр Vim
&g: имя_переменной 	глобальный параметр Vim
@ имя_переменной 	реестр Vim
$ имя_переменной 	Переменная окружения 

"example"
nmap <silent> ]] :let &tabstop += 1<CR>
nmap <silent> [[ :let &tabstop -= &tabstop > 1 ? 1 : 0<CR>

//--------------------------------------------------------------------
Листинг 10. Подсветка слов, часто используемых неправильно

"Задаем стиль подсветки текста...
highlight STANDOUT term=bold cterm=bold gui=bold

"Список проблемных слов...
let s:words = [
             \ "it's",  "its",
             \ "your",  "you're",
             \ "were",  "we're",   "where",
             \ "their", "they're", "there",
             \ "to",    "too",     "two"
             \ ]

"Создаем команду Vim для нахождения проблемных слов...
let s:words_matcher
\ = 'match STANDOUT /\c\<\(' . join(s:words, '\|') . '\)\>/'

"Создаем функцию для включения и выключения режима проверки...
function! WordCheck ()
   "Переключаем состояние флага (или задаем его, если он еще не существует)...
   let w:check_words = exists('w:check_words') ? !w:check_words : 1

   "В соответствии с новым состоянием флага включаем или выключаем проверку слов...
   if w:check_words
      exec s:words_matcher
   else
      match none
   endif
endfunction

"Задаем сочетание клавиш ;p для переключения проверки...

nmap <silent>  ;p  :call WordCheck()<CR>
//--------------------------------------------------------------------
imap <silent> <C-C> <C-R>=string(eval(input("Calculate: ")))<CR>

//--------------------------------------------------------------------

Листинг 11. Добавление игнорирования пустых строк при вертикальном копировании

"Находим и возвращаем символ, находящийся "над" текущей позицией курсора...
function! LookUpwards()
   "Определяем текущий столбец и целевую строку для копирования...
   let column_num      = virtcol('.')
   let target_pattern  = '\%' . column_num . 'v.'
   let target_line_num = search(target_pattern . '*\S', 'bnW')

   "Если целевая строка найдена, возвращаем вертикально скопированный символ...

   if !target_line_num
      return ""
   else
      return matchstr(getline(target_line_num), target_pattern)
   endif
endfunction

"Переопределяем действие CTRL-Y в режиме ввода текста...

imap <silent>  <C-Y>  <C-R><C-R>=LookUpwards()<CR>

//--------------------------------------------------------------------


#VIM remote send (VERY COOL)
start gvim --servername BEAD
FOR /R %%i IN (*.htm) DO gvim --servername BEAD --remote-silent "%%i"
gvim --servername BEAD --remote-send "<Esc>:bufdo %%s/Tweety Bird/Road
Runner/ge<CR>"
gvim --servername BEAD --remote-send "<Esc>:bufdo
%%s/\(^File:.*JPG\).*/\1/ge<CR>"
rem Write all files and exit
gvim --servername BEAD --remote-send "<Esc>:xall<CR>"



# CTRL M remove recourse
If you put script.vim in your plugin directory, you may not see any
useful error messages about CR characters. You can source the script
after starting Vim (for example, :source ~/.vim/plugin/script.vim) to
see if errors including "^M" are shown.

If there are many files that you need to fix, you can use the Unix
dos2unix utility, for example:

#install utility
sudo apt-get install dos2unix

#run it recoursive in 'vimfiles' directory
find . -name *.vim -exec dis2unix -f {} \;



""""""""""""""""
"ENCODING"""""""
""""""""""""""""
":e ++enc=cp1251<CR>
":e ++enc=utf8 <CR>

