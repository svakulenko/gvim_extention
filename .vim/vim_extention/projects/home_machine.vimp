



create_web_app_with_py=D:\workspace\django CD=. filter="*.py *.html *.txt" {
 django_bookmarks=django_bookmarks {
  __init__.py
  manage.py
  settings.py
  urls.py
  passwd.txt
  bookmarks=bookmarks {
   __init__.py
   models.py
   tests.py
   views.py
  }
  templates=templates {
   bookmarks=bookmarks {
    main_page.html
    user_page.html
   }
   registration=registration {
    login.html
   }
  }
 }
 old=old {
  create_web_app_with_py=create_web_app_with_py {
   mysite=mysite {
    __init__.py
    manage.py
    settings.py
    urls.py
    passwd.txt
    blog=blog {
     __init__.py
     models.py
     tests.py
     urls.py
     views.py
     templates=templates {
      archive.html
      base.html
     }
    }
   }
   new_site=new_site {
    __init__.py
    manage.py
    settings.py
    urls.py
    passwd.txt
    blog=blog {
     __init__.py
     models.py
     tests.py
     views.py
    }
    templates=templates {
     blog=blog {
      bbase.html
      list.html
     }
    }
   }
   todo_site=todo_site {
    __init__.py
    manage.py
    settings.py
    urls.py
    templates=templates {
     admin=admin {
      404.html
      500.html
      actions.html
      app_index.html
      base.html
      base_site.html
      change_form.html
      change_list.html
      change_list_results.html
      date_hierarchy.html
      delete_confirmation.html
      delete_selected_confirmation.html
      filter.html
      index.html
      invalid_setup.html
      login.html
      object_history.html
      pagination.html
      prepopulated_fields_js.html
      search_form.html
      submit_line.html
      template_validator.html
      auth=auth {
       user=user {
        add_form.html
        change_password.html
       }
      }
      edit_inline=edit_inline {
       stacked.html
       tabular.html
      }
      includes=includes {
       fieldset.html
      }
     }
     todo=todo {
      item=item {
       change_list.html
      }
     }
    }
    todo=todo {
     __init__.py
     models.py
     tests.py
     views.py
    }
   }
  }
  django_bookmarks=django_bookmarks {
   __init__.py
   manage.py
   settings.py
   urls.py
   bookmarks=bookmarks {
    __init__.py
    models.py
    tests.py
    views.py
   }
  }
  iFriends=iFriends {
   __init__.py
   manage.py
   settings.py
   urls.py
  }
 }
}

PRJ_WPTHEMES="C:\Program Files\Apache Software Foundation\Apache2.2\www\wp-content\themes" CD=. filter="*.php" {
 index.php
 DarlingTemplate=DarlingTemplate {
  footer.php
  header.php
  index.php
  sidebar.php
 }
 MyTheme=MyTheme {
  404.php
  archive.php
  comments.php
  footer.php
  functions.php
  header.php
  index.php
  page.php
  search.php
  sidebar.php
  single.php
 }
 elastic2=elastic2 {
  comments.php
  footer.php
  functions.php
  header.php
  index.php
  layout.php
  state.php
  content=content {
   archive.php
   attachment.php
   author.php
   category.php
   error404.php
   index.php
   page.php
   search.php
   single.php
   tag.php
  }
  header=header {
   index.php
  }
  sidebar=sidebar {
   index.php
  }
 }
 pressplay=pressplay {
  404.php
  archives.php
  author.php
  category.php
  comments.php
  date.php
  footer.php
  functions.php
  header.php
  image.php
  index.php
  links.php
  no-sidebar.php
  page.php
  search.php
  searchform.php
  sidebar.php
  single.php
  tag.php
  widget-page.php
  images=images {
   examples=examples {
   }
  }
  languages=languages {
  }
  library=library {
   gallery-mod.php
   page-navigation.php
   theme-options.php
  }
 }
 t3=t3 {
  404.php
  attachment.php
  footer.php
  functions.php
  header.php
  index.php
  single.php
 }
 t4=t4 {
  header.php
  index.php
 }
 the-buffet-framework=the-buffet-framework {
  404.php
  archive.php
  attachment.php
  comments.php
  footer.php
  functions.php
  header.php
  home.php
  index.php
  page.php
  search.php
  searchform.php
  sidebar.php
  single.php
  css=css {
   960gs=960gs {
    uncompressed=uncompressed {
    }
   }
   blueprint=blueprint {
    plugins=plugins {
     buttons=buttons {
     }
     fancy-type=fancy-type {
     }
     link-icons=link-icons {
     }
     rtl=rtl {
     }
    }
   }
   layouts=layouts {
   }
  }
  images=images {
   icons=icons {
   }
  }
  includes=includes {
   actions.php
   admin.php
   core.php
   extensions.php
   filters.php
   helpers.php
   launcher.php
   options.php
   template.php
   widgets.php
   extensions=extensions {
    default-extensions.php
   }
   js=js {
    jcrop=jcrop {
    }
    superfish=superfish {
    }
    supersleight=supersleight {
    }
   }
  }
  language=language {
  }
 }
 thematic=thematic {
  404.php
  archive.php
  archives.php
  attachment.php
  author.php
  category.php
  comments.php
  footer.php
  functions.php
  header.php
  index.php
  links.php
  page.php
  search.php
  searchform.php
  sidebar-index-bottom.php
  sidebar-index-insert.php
  sidebar-index-top.php
  sidebar-page-bottom.php
  sidebar-page-top.php
  sidebar-single-bottom.php
  sidebar-single-insert.php
  sidebar-single-top.php
  sidebar-subsidiary.php
  sidebar.php
  single.php
  tag.php
  template-page-blog.php
  template-page-fullwidth.php
  library=library {
   extensions=extensions {
    comments-extensions.php
    content-extensions.php
    discussion-extensions.php
    discussion.php
    dynamic-classes.php
    footer-extensions.php
    header-extensions.php
    helpers.php
    shortcodes.php
    sidebar-extensions.php
    theme-options.php
    widgets-extensions.php
    widgets.php
   }
   grids=grids {
   }
   languages=languages {
   }
   layouts=layouts {
   }
   legacy=legacy {
    deprecated.php
   }
   scripts=scripts {
   }
   styles=styles {
   }
  }
  thematicsamplechildtheme=thematicsamplechildtheme {
   functions.php
  }
 }
 twentyten=twentyten {
  404.php
  archive.php
  attachment.php
  author.php
  category.php
  comments.php
  footer.php
  functions.php
  header.php
  index.php
  loop-attachment.php
  loop-page.php
  loop-single.php
  loop.php
  onecolumn-page.php
  page.php
  search.php
  sidebar-footer.php
  sidebar.php
  single.php
  tag.php
  images=images {
   headers=headers {
   }
  }
  languages=languages {
  }
 }
}


DIPLOM_CSHARP=D:\workspace\csharp\Diplom\src CD=. {
 Calcul.cs
 MainForm.Designer.cs
 MainForm.cs
 MainForm.resx
 Program.cs
 Types.cs
 debug.cs
 imageMainProc.cs
 AForge.NET=AForge.NET {
 }
 Properties=Properties {
 }
}


ocaml=D:\workspace\ocaml CD=. filter="*.ml" {
 Apress_Practical_OCaml=Apress_Practical_OCaml {
  hello_world.ml
   Bindings.ml
   Records_And_Types.ml
   printf_type_def.ml
   Functions.ml
   Functions_2.ml
   Functions_3.ml
   Function_4_Recurcive.ml
   Pattern_Matching.ml
   signature.ml
   List.ml
   convert_funcs.ml
 }
 func_impl=func_impl {
  euclid.ml
  fact.ml
  fib.ml
  func_impl.ml
  infix_op.ml
  list_size.ml
  match.ml
  multitab.ml
  power.ml
  test.ml
 }
 hello_world=hello_world {
  my_code.ml
 }
}





ocaml2=D:\workspace\ocaml CD=. filter="*.*" {
 testfile.2
 testfile.3
 Apress_Practical_OCaml=Apress_Practical_OCaml {
  test.ml
  1.dump
  Classes.ml
  Classes2_tutorial.ml
  Currying.ml
  DataBase.ml
  DataBase2.ml
  Exceptions.ml
  Files_IO_Channels.ml
  Function_4_Recurcive.ml
  Functions.ml
  Functions_2.ml
  Functions_3.ml
  Functions_signatures.ml
  Hashtables.ml
  Labels.ml
  List.ml
  Map.ml
  Pattern_Matching.ml
  Queue.ml
  Records_And_Types.ml
  ReferenceBindings.ml
  Regex.ml_gtk
  Set.ml
  Stack.ml
  Threads.ml_gtk
  ThreadsPop3.ml_gtk
  array.ml
  binary_files_work.cmi
  binary_files_work.cmo
  binary_files_work.ml
  calc.cmi
  calc.cmo
  calc.ml
  calc1.exe
  calc_only_lex.cmi
  calc_only_lex.cmo
  calc_only_lex.exe
  calc_only_lex.ml
  calc_only_lex.mll
  camlprog.exe
  compare.ml
  convert_funcs.ml
  convert_funcs.mli
  enum.ml
  experement.ml
  file_name.txt
  first_module.cmi
  first_module.cmo
  first_module.ml
  first_module_check.cmi
  first_module_check.ml
  first_uri.cma
  first_uri.cmi
  first_uri.cmo
  first_uri.ml
  first_uri.mli
  first_uri_check.ml
  first_uri_check_compile.cmi
  first_uri_check_compile.cmo
  first_uri_check_compile.ml
  functional_vs_imperative.ml
  functors.ml
  functors_complete_example.ml
  functors_curring.ml
  gui.ml
  hello_world.ml
  lexer.cmi
  lexer.cmo
  lexer.ml
  lexer.mll
  lexer_first_how_to_compl.txt
  match_with_vs_if.ml_gtk
  module.cma
  module.cmi
  module.cmo
  module.ml
  module.mli
  module_bak.mli
  module_how_to_compile.txt
  module_who_use.ml
  ocaml_check.ml
  parser.cmi
  parser.cmo
  parser.ml
  parser.mli
  parser.mly
  printf_type_def.ml
  scanf.ml
  signature.ml
  sockets.cmi
  sockets.cmo
  sockets.exe
  sockets.ml
  some.mli
  string.ml
  test.ml
  testfile.2
  testfile.3
  tree.ml
  tuple.ml
  tutorial0.ml
  types.ml
  wc.cmi
  wc.cmo
  wc.exe
  wc.ml
  wc.mll
  xxd_man.exe
  Spam_filter=Spam_filter {
   command_line.ml
   spam.mli
   spam.mll
  }
  config_parser=config_parser {
   comple.bat
   config.txt
   config_lexer.cmi
   config_lexer.cmo
   config_lexer.ml
   config_lexer.mll
   config_parser.cmi
   config_parser.cmo
   config_parser.ml
   config_parser.mli
   config_parser.mly
   pars.mly
   pycfg.bat
   pycfg.exe
   pycfg.mll
   pycfg.mly
   test.exe
   build=build {
    pycfg_lexer.cmi
    pycfg_lexer.cmo
    pycfg_lexer.ml
    pycfg_parser.cmi
    pycfg_parser.cmo
    pycfg_parser.ml
    pycfg_parser.mli
   }
  }
  ocamlyacc_tutorial=ocamlyacc_tutorial {
   01_rpcalc=01_rpcalc {
    compile.bat
    main.ml
    rpcalc.exe
    rpcalc.mll
    rpcalc.mly
    rpcalc_build=rpcalc_build {
     main.cmi
     main.cmo
     rpcalc_lexer.cmi
     rpcalc_lexer.cmo
     rpcalc_lexer.ml
     rpcalc_parser.cmi
     rpcalc_parser.cmo
     rpcalc_parser.ml
     rpcalc_parser.mli
    }
   }
   02_calc=02_calc {
    calc.exe
    calc.mll
    calc.mly
    compile.bat
    main.ml
    calc_build=calc_build {
     calc_lexer.cmi
     calc_lexer.cmo
     calc_lexer.ml
     calc_parser.cmi
     calc_parser.cmo
     calc_parser.ml
     calc_parser.mli
     main.cmi
     main.cmo
    }
    itcalc_build=itcalc_build {
    }
   }
   03_itcalc=03_itcalc {
    compile.bat
    itcalc.exe
    itcalc.mll
    itcalc.mly
    main.ml
    itcalc_build=itcalc_build {
     itcalc_lexer.cmi
     itcalc_lexer.cmo
     itcalc_lexer.ml
     itcalc_parser.cmi
     itcalc_parser.cmo
     itcalc_parser.ml
     itcalc_parser.mli
     main.cmi
     main.cmo
    }
   }
   04_mfcalc=04_mfcalc {
    compile.bat
    main.ml
    mfcalc.exe
    mfcalc.mll
    mfcalc.mly
    output.txt
    mfcalc_build=mfcalc_build {
     main.cmi
     main.cmo
     mfcalc_lexer.cmi
     mfcalc_lexer.cmo
     mfcalc_lexer.ml
     mfcalc_parser.cmi
     mfcalc_parser.cmo
     mfcalc_parser.ml
     mfcalc_parser.mli
    }
   }
   06_calc_genlex=06_calc_genlex {
    lex_pars.ml_gtk
   }
  }
  syslogComplx=syslogComplx {
   compile.bat
   execution_output.txt
   mll.txt
   mll_types.ml
   syslogComplx.exe
   syslogComplx.mll
   syslogComplx.mly
   syslogComplx_build=syslogComplx_build {
    mll_types.cmi
    mll_types.cmo
    syslogComplx_lexer.cmi
    syslogComplx_lexer.cmo
    syslogComplx_lexer.ml
    syslogComplx_parser.cmi
    syslogComplx_parser.cmo
    syslogComplx_parser.ml
    syslogComplx_parser.mli
   }
  }
  syslog_parser=syslog_parser {
   compile.bat
   syslog.exe
   syslog.mll
   syslog.mly
   syslog_build=syslog_build {
    syslog_lexer.cmi
    syslog_lexer.cmo
    syslog_lexer.ml
    syslog_parser.cmi
    syslog_parser.cmo
    syslog_parser.ml
    syslog_parser.mli
   }
  }
  webcrawler=webcrawler {
   crawler.ml_gtk
   crawler.mli
  }
 }
 examens_tep=examens_tep {
  16_11_09.ml
  17_11_08.ml
  signatures.ml
  test.ml
 }
 func_impl=func_impl {
  a.out
  camlprog.exe
  euclid.ml
  fact.ml
  fib.ml
  func_impl.cmi
  func_impl.exe
  func_impl.ml
  infix_op.ml
  list_size.ml
  match.ml
  multitab.ml
  power.ml
  test.cmi
  test.cmo
  test.ml
 }
 hello_world=hello_world {
  my_code.cmi
  my_code.cmo
  my_code.exe
  my_code.ml
  run.bat
 }
 lablgtk2=lablgtk2 {
  lablgtk_examples-2.14.0-win32=lablgtk_examples-2.14.0-win32 {
   about.ml
   accel_tree.ml
   action.ml
   assistant.ml
   assistant_tutorial.ml
   buttons.ml
   calc.ml
   calendar.ml
   cgets.ml
   clist.ml
   combo.ml
   combobox.ml
   counter.ml
   cputs.ml
   csview.ml
   custom_list_generic.ml
   custom_tree.ml
   custom_tree_generic.ml
   dcalendar.ml
   drawing.ml
   druid.ml
   editor.ml
   editor2.ml
   entry.ml
   entrycompletion.ml
   eventbox.ml
   events.ml
   events2.ml
   expander.ml
   fifteen.ml
   filechooser.ml
   fixed_editor.ml
   fixpoint.ml
   gioredirect.ml
   giotest.ml
   gnome-fs-directory.png
   gnome-fs-regular.png
   hello.cmi
   hello.cmx
   hello.exe
   hello.ml
   hello.ml_gtk
   iconview.ml
   image.ml
   image256x256.rgb
   kaimono.ml
   label.ml
   link_button.ml
   lissajous.ml
   nihongo.ml
   notebook.ml
   pixview.ml
   pousse.ml
   progressbar.ml
   radiobuttons.ml
   rpn.ml
   scrolledwin.ml
   signal_override.ml
   slide_show.ml
   socket.ml
   spell.ml
   spin.ml
   test.xpm
   testdnd.ml
   testgtk.cmi
   testgtk.ml
   testgtk.ml_gtk
   timer.ml
   toolbar.ml
   tooltip.ml
   tree.ml
   tree_model.ml
   tree_store.ml
   tron.ml
   hello.obj
   canvas=canvas {
    canvas-arrowhead.ml
    canvas-curve.ml
    canvas-features.ml
    canvas-fifteen.ml
    canvas-primitives.ml
    canvas-richtext.ml
    flower.png
    toroid.png
   }
   glade=glade {
    glade_demo.ml
    gladecalc.ml
    project1.glade
    project1.gladep
    project1.ml
    project2.glade
    project2.gladep
    project2.ml
   }
   rsvg=rsvg {
    floppy.svg
    test_rsvg.ml
   }
   text=text {
    floppybuddy.gif
    gtk-logo-rgb.gif
    test.txt
    test_text.ml
    text-demo.ml
    unicode_table.ml
    unicode_viewer.ml
   }
  }
  my_code=my_code {
   file.ml_gtk
   gnome-fs-directory.png
   tcmd_tray.ml_gtk
   tcmd_tray.ml_gtk tcmd_tray.ml_gtk.stable
   testfile.2
   testgtk.ml_gtk
  }
 }
 ocamlyacc-examples=ocamlyacc-examples {
  1.rpcalc=1.rpcalc {
   lexer.mll
   main.ml
   rpcalc.mly
  }
  2.calc=2.calc {
   calc.mly
   lexer.mll
   main.ml
  }
  3.ltcalc=3.ltcalc {
   lexer.mll
   ltcalc.mly
   main.ml
  }
  4.mfcalc=4.mfcalc {
   lexer.mll
   main.ml
   mfcalc.mly
  }
 }
}



FSAFE=D:\workspace\F-Safe CD=. filter="*.ml *.mly *.mll *.vrun" {
 config.ml
 debug.ml
 fsafe.ml
 handler.ml
 interpret.ml
 main.ml
 misc.ml
 termination.ml
 typechecker.ml
 parser.mly
 lexer.mll
 config.vrun
 _build=_build {
  config.ml
  debug.ml
  fsafe.ml
  handler.ml
  interpret.ml
  lexer.ml
  main.ml
  misc.ml
  parser.ml
  termination.ml
  typechecker.ml
  parser.mly
  lexer.mll
 }
 _buildWin32=_buildWin32 {
  debug.ml
  fsafe.ml
  handler.ml
  interpret.ml
  lexer.ml
  main.ml
  misc.ml
  parser.ml
  termination.ml
  typechecker.ml
  parser.mly
  lexer.mll
 }
 lib=lib {
 }
 test=test {
  good=good {
  }
 }
}


Eclipse_java=D:\workspace\Eclipse CD=. filter="*.xml *.java *.properties " {
 hello_world=hello_world {
  AndroidManifest.xml
  default.properties
  assets=assets {
  }
  bin=bin {
   com=com {
    example=example {
     helloworldandroid=helloworldandroid {
     }
    }
   }
  }
  gen=gen {
   com=com {
    example=example {
     helloworldandroid=helloworldandroid {
      R.java
     }
    }
   }
  }
  res=res {
   drawable-hdpi=drawable-hdpi {
   }
   drawable-ldpi=drawable-ldpi {
   }
   drawable-mdpi=drawable-mdpi {
   }
   layout=layout {
    main.xml
   }
   values=values {
    strings.xml
   }
  }
  src=src {
   com=com {
    example=example {
     helloworldandroid=helloworldandroid {
      Hello_worldActivity.java
     }
    }
   }
  }
 }
 hwa=hwa {
  AndroidManifest.xml
  default.properties
  assets=assets {
  }
  bin=bin {
   com=com {
    example=example {
     hwa=hwa {
     }
    }
   }
  }
  gen=gen {
   com=com {
    example=example {
     hwa=hwa {
      R.java
     }
    }
   }
  }
  res=res {
   drawable-hdpi=drawable-hdpi {
   }
   drawable-ldpi=drawable-ldpi {
   }
   drawable-mdpi=drawable-mdpi {
   }
   layout=layout {
    main.xml
   }
   values=values {
    strings.xml
   }
  }
  src=src {
   com=com {
    example=example {
     hwa=hwa {
      HwaActivity.java
     }
    }
   }
  }
 }
 javaTest=javaTest {
  bin=bin {
   main=main {
   }
  }
  src=src {
   main=main {
    Main.java
   }
  }
 }
 metaClassTest=metaClassTest {
  bin=bin {
   com=com {
    metaclass=metaclass {
     example=example {
     }
    }
   }
  }
  src=src {
   com=com {
    metaclass=metaclass {
     example=example {
      MetaClassExample.java
     }
    }
   }
  }
 }
 notifier=notifier {
  bin=bin {
   package_main=package_main {
   }
  }
  src=src {
   package_main=package_main {
    Main.java
    NDaemon.java
    Notifier_t.java
    NotifyPersinstancy.java
    NotifyerTrayIcon.java
    TcpServer.java
    ThreadAlarm.java
   }
  }
 }
 notifyer_client=notifyer_client {
  bin=bin {
   package_tcp_client=package_tcp_client {
   }
  }
  src=src {
   package_tcp_client=package_tcp_client {
    NotifyClient.java
   }
  }
 }
}




PeerSimBitTorrent=D:\downloads\bittorrent\bitpeer CD=. filter="*.java *.cfg" {
 config-BitTorrent.cfg
 classes=classes {
  peersim=peersim {
   bittorrent=bittorrent {
   }
  }
 }
 doc=doc {
  peersim=peersim {
   bittorrent=bittorrent {
   }
  }
  resources=resources {
  }
 }
 lib=lib {
 }
 src=src {
  peersim=peersim {
   bittorrent=bittorrent {
    BTObserver.java
    BitTorrent.java
    BitfieldMsg.java
    IntMsg.java
    NetworkDynamics.java
    NetworkInitializer.java
    NodeInitializer.java
    PeerSetMsg.java
    SimpleEvent.java
    SimpleMsg.java
   }
  }
 }
}


peer_to_sim=D:\workspace\eclipse_psia_peersim CD=. filter="*.java *.cfg" {
 config_file.cfg
 peer_to_sim_tp_2=peer_to_sim_tp_2 {
  config_file.cfg
  bin=bin {
   war=war {
    pack=pack {
     name=name {
     }
    }
   }
  }
  src=src {
   war=war {
    pack=pack {
     name=name {
      ArmyObserver.java
      Initializer.java
      Message.java
      Types.java
      WarGameNode.java
      WarGameTransport.java
     }
    }
   }
  }
 }
 peer_to_sim_tp_2_helloworld=peer_to_sim_tp_2_helloworld {
  bin=bin {
   helloWorld=helloWorld {
   }
  }
  src=src {
   helloWorld=helloWorld {
    HWTransport.java
    HelloWorld.java
    Initializer.java
    Message.java
   }
  }
 }
}>



car_tp4=D:\workspace\eclipse_emf\car_tp_4_uml CD=. filter="*.java" {
 META-INF=META-INF {
 }
 bin=bin {
  generator=generator {
   website=website {
   }
  }
  turtle=turtle {
   impl=impl {
   }
   tools=tools {
   }
   util=util {
   }
  }
 }
 model=model {
 }
 src=src {
  generator=generator {
   website=website {
    SimpleToHTML.java
   }
  }
  turtle=turtle {
   ActionBase.java
   Choreography.java
   ColorType.java
   EActionForward.java
   EActionRotate.java
   EActionSetPen.java
   Farm.java
   Stage.java
   Surface.java
   Turtle.java
   TurtleFactory.java
   TurtlePackage.java
   actionSetPen.java
   impl=impl {
    ActionBaseImpl.java
    ChoreographyImpl.java
    ColorTypeImpl.java
    EActionForwardImpl.java
    EActionRotateImpl.java
    EActionSetPenImpl.java
    FarmImpl.java
    StageImpl.java
    SurfaceImpl.java
    TurtleFactoryImpl.java
    TurtleImpl.java
    TurtlePackageImpl.java
   }
   tools=tools {
    Mainclient.java
   }
   util=util {
    TurtleAdapterFactory.java
    TurtleSwitch.java
   }
  }
 }
 templates=templates {
 }
}



btree_test=D:\workspace\c CD=. filter="*.c *.cpp" {
 test.cpp
 btree=btree {
  main.c
 }
 btree2=btree2 {
  main.c
  btree.cpp
 }
}

createTReeCS=D:\workspace\vs\c++_visual_studio\csharp_fsharp\creeTree_v2\creeTree_v2 CD=. filter="*.cs" {
 Program.cs
 Types.cs
 gui.cs
 utils.cs
 Properties=Properties {
  AssemblyInfo.cs
 }
 bin=bin {
  Debug=Debug {
  }
  Release=Release {
  }
 }
 obj=obj {
  x86=x86 {
   Debug=Debug {
    TempPE=TempPE {
    }
   }
  }
 }
}


tfc2=d:\workspace\vs\old_prj\tfc_traceClientConsumer\tfc_traceClientConsumer\src CD=. filter="*.cs" {
 Program.cs
 ScenariosCollector.cs
 dbg.cs
 mainController.cs
 telnetlib_wrapper.cs
 tfcPing.cs
 traceClientConsumer.cs
 types_t.cs
 xlsCreator.cs
}
tfc=d:\workspace\workspace_luxoft\work_old_prj\visual_studio\tfc_traceClientConsumer\tfc_traceClientConsumer\src CD=. filter="*.cs" {
 Program.cs
 ScenariosCollector.cs
 dbg.cs
 mainController.cs
 telnetlib_wrapper.cs
 tfcPing.cs
 traceClientConsumer.cs
 types_t.cs
 xlsCreator.cs
}



jmtouch=d:\JMultiTouch CD=. filter="*.xml *.java" {
 JMultiTouch=JMultiTouch {
  AndroidManifest.xml
  assets=assets {
  }
  bin=bin {
   classes=classes {
    fr=fr {
     shandroid=shandroid {
      accelerometer=accelerometer {
      }
      light=light {
      }
      proxymity=proxymity {
      }
     }
    }
   }
   fr=fr {
    shandroid=shandroid {
     AcceleratorSensor=AcceleratorSensor {
     }
     LightSensor=LightSensor {
     }
     ProximitySensor=ProximitySensor {
     }
    }
   }
   res=res {
    drawable-hdpi=drawable-hdpi {
    }
    drawable-ldpi=drawable-ldpi {
    }
    drawable-mdpi=drawable-mdpi {
    }
   }
   shandroid=shandroid {
    fr=fr {
    }
   }
  }
  gen=gen {
   fr=fr {
    shandroid=shandroid {
     R.java
    }
   }
  }
  res=res {
   drawable-hdpi=drawable-hdpi {
   }
   drawable-ldpi=drawable-ldpi {
   }
   drawable-mdpi=drawable-mdpi {
   }
   layout=layout {
    main.xml
    main_1.xml
   }
   values=values {
    strings.xml
   }
  }
  src=src {
   fr=fr {
    shandroid=shandroid {
     MTouchGraphic.java
     Point.java
     VCircle.java
     accelerometer=accelerometer {
      AccelerometerManager.java
      IAcceleratorListener.java
     }
     light=light {
      ILightListener.java
      LightManager.java
     }
     proxymity=proxymity {
      IProximityListener.java
      ProximityManager.java
     }
    }
   }
  }
 }
 __MACOSX=__MACOSX {
  JMultiTouch=JMultiTouch {
   res=res {
    drawable-hdpi=drawable-hdpi {
    }
    drawable-ldpi=drawable-ldpi {
    }
    drawable-mdpi=drawable-mdpi {
    }
    layout=layout {
    }
    values=values {
    }
   }
   src=src {
    fr=fr {
     shandroid=shandroid {
      accelerometer=accelerometer {
      }
      light=light {
      }
      proxymity=proxymity {
      }
     }
    }
   }
  }
 }
}


test_cpp_astek=D:\workspace\test\astek_tests\class1 CD=. filter="*" {
 app.exe
 class1.cpp
 compile.bat
 config.vrun
 main.cpp
 run.bat
 tags
 class1.h
}



iphone_apps_ppm=D:\etudes\matiers\ppm\tp CD=. filter="*.h *.m *.plist" {
 1=1 {
  ppmTp1 2="ppmTp1 2" {
   __MACOSX=__MACOSX {
    ppmTp1=ppmTp1 {
     ppmTp1=ppmTp1 {
      en.lproj=en.lproj {
      }
     }
    }
   }
   ppmTp1=ppmTp1 {
    ppmTp1=ppmTp1 {
     ppmTp1AppDelegate.h
     main.m
     ppmTp1AppDelegate.m
     ppmTp1-Info.plist
     en.lproj=en.lproj {
     }
    }
    ppmTp1.xcodeproj=ppmTp1.xcodeproj {
     project.xcworkspace=project.xcworkspace {
      xcuserdata=xcuserdata {
       m2sar.xcuserdatad=m2sar.xcuserdatad {
       }
      }
     }
     xcuserdata=xcuserdata {
      m2sar.xcuserdatad=m2sar.xcuserdatad {
       xcschemes=xcschemes {
        xcschememanagement.plist
       }
      }
     }
    }
   }
  }
 }
 2=2 {
  svakulenko_ppm2_tp2_partie1=svakulenko_ppm2_tp2_partie1 {
   __MACOSX=__MACOSX {
    svakulenko_ppm2_tp2_partie1=svakulenko_ppm2_tp2_partie1 {
     ppmtp2_partie1 2="ppmtp2_partie1 2" {
      ppmtp2_partie1=ppmtp2_partie1 {
       bases-dizainierGeek=bases-dizainierGeek {
       }
       en.lproj=en.lproj {
       }
       iPad=iPad {
       }
       iPhone=iPhone {
       }
      }
      ppmtp2_partie2_photoview=ppmtp2_partie2_photoview {
       ppmtp2_partie2_photoview=ppmtp2_partie2_photoview {
        en.lproj=en.lproj {
        }
        iPad=iPad {
        }
        iPhone=iPhone {
        }
        images=images {
        }
       }
      }
     }
    }
   }
   svakulenko_ppm2_tp2_partie1=svakulenko_ppm2_tp2_partie1 {
    Untitled.xcworkspace=Untitled.xcworkspace {
     xcuserdata=xcuserdata {
      m2sar.xcuserdatad=m2sar.xcuserdatad {
       xcdebugger=xcdebugger {
       }
      }
     }
    }
    ppmtp2_partie1 2="ppmtp2_partie1 2" {
     ppmtp2_partie1=ppmtp2_partie1 {
      ppmtp2_partie1AppDelegate.h
      main.m
      ppmtp2_partie1AppDelegate.m
      ppmtp2_partie1-Info.plist
      bases-dizainierGeek=bases-dizainierGeek {
      }
      en.lproj=en.lproj {
      }
      iPad=iPad {
       ppmtp2_partie1AppDelegate_iPad.h
       ppmtp2_partie1AppDelegate_iPad.m
       en.lproj=en.lproj {
       }
      }
      iPhone=iPhone {
       ppmtp2_partie1AppDelegate_iPhone.h
       ppmtp2_partie1AppDelegate_iPhone.m
       en.lproj=en.lproj {
       }
      }
     }
     ppmtp2_partie1.xcodeproj=ppmtp2_partie1.xcodeproj {
      project.xcworkspace=project.xcworkspace {
       xcuserdata=xcuserdata {
        m2sar.xcuserdatad=m2sar.xcuserdatad {
        }
       }
      }
      xcuserdata=xcuserdata {
       m2sar.xcuserdatad=m2sar.xcuserdatad {
        xcdebugger=xcdebugger {
        }
        xcschemes=xcschemes {
         xcschememanagement.plist
        }
       }
      }
     }
     ppmtp2_partie2_photoview=ppmtp2_partie2_photoview {
      ppmtp2_partie2_photoview=ppmtp2_partie2_photoview {
       MyUIView.h
       ppmtp2_partie2_photoviewAppDelegate.h
       main.m
       MyUIView.m
       ppmtp2_partie2_photoviewAppDelegate.m
       ppmtp2_partie2_photoview-Info.plist
       HeadsUpUI=HeadsUpUI {
        AppDelegate.h
        HoverView.h
        MainView.h
        MyViewController.h
        AppDelegate.m
        HoverView.m
        main.m
        MainView.m
        MyViewController.m
        Info.plist
        HeadsUpUI.xcodeproj=HeadsUpUI.xcodeproj {
         project.xcworkspace=project.xcworkspace {
          xcuserdata=xcuserdata {
           m2sar.xcuserdatad=m2sar.xcuserdatad {
           }
          }
         }
         xcuserdata=xcuserdata {
          m2sar.xcuserdatad=m2sar.xcuserdatad {
           xcschemes=xcschemes {
            xcschememanagement.plist
           }
          }
         }
        }
        images=images {
        }
        en.lproj=en.lproj {
        }
       }
       en.lproj=en.lproj {
       }
       iPad=iPad {
        ppmtp2_partie2_photoviewAppDelegate_iPad.h
        ppmtp2_partie2_photoviewAppDelegate_iPad.m
        en.lproj=en.lproj {
        }
       }
       iPhone=iPhone {
        ppmtp2_partie2_photoviewAppDelegate_iPhone.h
        ppmtp2_partie2_photoviewAppDelegate_iPhone.m
        en.lproj=en.lproj {
        }
       }
       images=images {
       }
      }
     }
    }
   }
  }
  svakulenko_ppm2_tp2_partie_2=svakulenko_ppm2_tp2_partie_2 {
   __MACOSX=__MACOSX {
    svakulenko_ppm2_tp2_partie_2=svakulenko_ppm2_tp2_partie_2 {
     ppmtp2_partie1 2="ppmtp2_partie1 2" {
      ppmtp2_partie2_photoview=ppmtp2_partie2_photoview {
       ppmtp2_partie2_photoview=ppmtp2_partie2_photoview {
        en.lproj=en.lproj {
        }
        iPad=iPad {
        }
        iPhone=iPhone {
        }
        images=images {
         bases-Imagier=bases-Imagier {
         }
        }
       }
      }
     }
    }
   }
   svakulenko_ppm2_tp2_partie_2=svakulenko_ppm2_tp2_partie_2 {
    Untitled.xcworkspace=Untitled.xcworkspace {
     xcuserdata=xcuserdata {
      m2sar.xcuserdatad=m2sar.xcuserdatad {
       xcdebugger=xcdebugger {
       }
      }
     }
    }
    ppmtp2_partie1 2="ppmtp2_partie1 2" {
     ppmtp2_partie2_photoview=ppmtp2_partie2_photoview {
      ppmtp2_partie2_photoview=ppmtp2_partie2_photoview {
       MyUIView.h
       ppmtp2_partie2_photoviewAppDelegate.h
       main.m
       MyUIView.m
       ppmtp2_partie2_photoviewAppDelegate.m
       ppmtp2_partie2_photoview-Info.plist
       HeadsUpUI=HeadsUpUI {
        AppDelegate.h
        HoverView.h
        MainView.h
        MyViewController.h
        AppDelegate.m
        HoverView.m
        main.m
        MainView.m
        MyViewController.m
        Info.plist
        HeadsUpUI.xcodeproj=HeadsUpUI.xcodeproj {
         project.xcworkspace=project.xcworkspace {
          xcuserdata=xcuserdata {
           m2sar.xcuserdatad=m2sar.xcuserdatad {
           }
          }
         }
         xcuserdata=xcuserdata {
          m2sar.xcuserdatad=m2sar.xcuserdatad {
           xcschemes=xcschemes {
            xcschememanagement.plist
           }
          }
         }
        }
        images=images {
        }
        en.lproj=en.lproj {
        }
       }
       en.lproj=en.lproj {
       }
       iPad=iPad {
        ppmtp2_partie2_photoviewAppDelegate_iPad.h
        ppmtp2_partie2_photoviewAppDelegate_iPad.m
        en.lproj=en.lproj {
        }
       }
       iPhone=iPhone {
        ppmtp2_partie2_photoviewAppDelegate_iPhone.h
        ppmtp2_partie2_photoviewAppDelegate_iPhone.m
        en.lproj=en.lproj {
        }
       }
       images=images {
        bases-Imagier=bases-Imagier {
        }
       }
      }
      ppmtp2_partie2_photoview.xcodeproj=ppmtp2_partie2_photoview.xcodeproj {
       project.xcworkspace=project.xcworkspace {
        xcuserdata=xcuserdata {
         m2sar.xcuserdatad=m2sar.xcuserdatad {
         }
        }
       }
       xcuserdata=xcuserdata {
        m2sar.xcuserdatad=m2sar.xcuserdatad {
         xcschemes=xcschemes {
          xcschememanagement.plist
         }
        }
       }
      }
     }
    }
   }
  }
 }
 3=3 {
  s4=s4 {
   __MACOSX=__MACOSX {
    s4=s4 {
     s4=s4 {
      en.lproj=en.lproj {
      }
      iPad=iPad {
       en.lproj=en.lproj {
       }
      }
      iPhone=iPhone {
       en.lproj=en.lproj {
       }
      }
     }
     s4.xcodeproj=s4.xcodeproj {
      project.xcworkspace=project.xcworkspace {
       xcuserdata=xcuserdata {
       }
      }
      xcuserdata=xcuserdata {
       m2sar.xcuserdatad=m2sar.xcuserdatad {
        xcschemes=xcschemes {
        }
       }
      }
     }
    }
   }
   s4=s4 {
    s4=s4 {
     MyAnnotation.h
     MyCtrl.h
     MyView.h
     s4AppDelegate.h
     main.m
     MyAnnotation.m
     MyCtrl.m
     MyView.m
     s4AppDelegate.m
     s4-Info.plist
     en.lproj=en.lproj {
     }
     iPad=iPad {
      s4AppDelegate_iPad.h
      s4AppDelegate_iPad.m
      en.lproj=en.lproj {
      }
     }
     iPhone=iPhone {
      s4AppDelegate_iPhone.h
      s4AppDelegate_iPhone.m
      en.lproj=en.lproj {
      }
     }
    }
    s4.xcodeproj=s4.xcodeproj {
     project.xcworkspace=project.xcworkspace {
      xcuserdata=xcuserdata {
       m2sar.xcuserdatad=m2sar.xcuserdatad {
       }
      }
     }
     xcuserdata=xcuserdata {
      m2sar.xcuserdatad=m2sar.xcuserdatad {
       xcdebugger=xcdebugger {
       }
       xcschemes=xcschemes {
        xcschememanagement.plist
       }
      }
     }
    }
   }
  }
 }
 4=4 {
  FullActivity2=FullActivity2 {
   FullActivity2=FullActivity2 {
    FullActivity2=FullActivity2 {
     FullActivity2AppDelegate.h
     MainViewCtrl.h
     MyDetailledViewController.h
     MyTabViewCtrl.h
     TaskItem.h
     TaskSection.h
     FullActivity2AppDelegate.m
     main.m
     MainViewCtrl.m
     MyDetailledViewController.m
     MyTabViewCtrl.m
     TaskItem.m
     TaskSection.m
     FullActivity2-Info.plist
     FullActivities=FullActivities {
      TaskSection.h
      TaskSection.m
     }
     en.lproj=en.lproj {
     }
     iPad=iPad {
      FullActivity2AppDelegate_iPad.h
      FullActivity2AppDelegate_iPad.m
      en.lproj=en.lproj {
      }
     }
     iPhone=iPhone {
      FullActivity2AppDelegate_iPhone.h
      FullActivity2AppDelegate_iPhone.m
      en.lproj=en.lproj {
      }
     }
    }
    FullActivity2.xcodeproj=FullActivity2.xcodeproj {
     project.xcworkspace=project.xcworkspace {
      xcuserdata=xcuserdata {
       m2sar.xcuserdatad=m2sar.xcuserdatad {
       }
      }
     }
     xcuserdata=xcuserdata {
      m2sar.xcuserdatad=m2sar.xcuserdatad {
       xcdebugger=xcdebugger {
       }
       xcschemes=xcschemes {
        xcschememanagement.plist
       }
      }
     }
    }
   }
   __MACOSX=__MACOSX {
    FullActivity2=FullActivity2 {
     FullActivity2=FullActivity2 {
      FullActivities=FullActivities {
      }
      en.lproj=en.lproj {
      }
      iPad=iPad {
      }
      iPhone=iPhone {
      }
     }
    }
   }
  }
  chatelet3=chatelet3 {
   __MACOSX=__MACOSX {
    chatelet3=chatelet3 {
     chatelet3=chatelet3 {
      en.lproj=en.lproj {
      }
      exoMachine=exoMachine {
      }
      iPad=iPad {
       en.lproj=en.lproj {
       }
      }
      iPhone=iPhone {
       en.lproj=en.lproj {
       }
      }
     }
     chatelet3.xcodeproj=chatelet3.xcodeproj {
      project.xcworkspace=project.xcworkspace {
       xcuserdata=xcuserdata {
        m2sar.xcuserdatad=m2sar.xcuserdatad {
        }
       }
      }
      xcuserdata=xcuserdata {
       m2sar.xcuserdatad=m2sar.xcuserdatad {
        xcschemes=xcschemes {
        }
       }
      }
     }
    }
   }
   chatelet3=chatelet3 {
    chatelet3=chatelet3 {
     AdminViewCtrl.h
     DetailedViewCtrl.h
     MyTableViewCtrl.h
     Pair.h
     StantionsViewCtrl.h
     chatelet3AppDelegate.h
     AdminViewCtrl.m
     DetailedViewCtrl.m
     chatelet3AppDelegate.m
     main.m
     MyTableViewCtrl.m
     Pair.m
     StantionsViewCtrl.m
     chatelet3-Info.plist
     en.lproj=en.lproj {
     }
     exoMachine=exoMachine {
      MainViewCtrl.m
     }
     iPad=iPad {
      chatelet3AppDelegate_iPad.h
      chatelet3AppDelegate_iPad.m
      en.lproj=en.lproj {
      }
     }
     iPhone=iPhone {
      chatelet3AppDelegate_iPhone.h
      chatelet3AppDelegate_iPhone.m
      en.lproj=en.lproj {
      }
     }
    }
    chatelet3.xcodeproj=chatelet3.xcodeproj {
     project.xcworkspace=project.xcworkspace {
      xcuserdata=xcuserdata {
       m2sar.xcuserdatad=m2sar.xcuserdatad {
       }
      }
     }
     xcuserdata=xcuserdata {
      m2sar.xcuserdatad=m2sar.xcuserdatad {
       xcdebugger=xcdebugger {
       }
       xcschemes=xcschemes {
        xcschememanagement.plist
       }
      }
     }
    }
   }
  }
 }
 5=5 {
  Bille1=Bille1 {
   Bille1=Bille1 {
    Bille1=Bille1 {
     Bille1AppDelegate.h
     MainViewCtrl.h
     Bille1AppDelegate.m
     main.m
     MainViewCtrl.m
     Bille1-Info.plist
     en.lproj=en.lproj {
     }
     iPad=iPad {
      Bille1AppDelegate_iPad.h
      Bille1AppDelegate_iPad.m
      en.lproj=en.lproj {
      }
     }
     iPhone=iPhone {
      Bille1AppDelegate_iPhone.h
      Bille1AppDelegate_iPhone.m
      en.lproj=en.lproj {
      }
     }
    }
    Bille1.xcodeproj=Bille1.xcodeproj {
     project.xcworkspace=project.xcworkspace {
      xcuserdata=xcuserdata {
       m2sar.xcuserdatad=m2sar.xcuserdatad {
       }
      }
     }
     xcuserdata=xcuserdata {
      m2sar.xcuserdatad=m2sar.xcuserdatad {
       xcdebugger=xcdebugger {
       }
       xcschemes=xcschemes {
        xcschememanagement.plist
       }
      }
     }
    }
   }
   __MACOSX=__MACOSX {
    Bille1=Bille1 {
     Bille1=Bille1 {
      en.lproj=en.lproj {
      }
      iPad=iPad {
       en.lproj=en.lproj {
       }
      }
      iPhone=iPhone {
       en.lproj=en.lproj {
       }
      }
     }
    }
   }
  }
  TaperJouer2=TaperJouer2 {
   TaperJouer2=TaperJouer2 {
    TaperJouer2=TaperJouer2 {
     MainViewCtrl.h
     TaperJouer2AppDelegate.h
     main.m
     MainViewCtrl.m
     TaperJouer2AppDelegate.m
     TaperJouer2-Info.plist
     en.lproj=en.lproj {
     }
     iPad=iPad {
      TaperJouer2AppDelegate_iPad.h
      TaperJouer2AppDelegate_iPad.m
      en.lproj=en.lproj {
      }
     }
     iPhone=iPhone {
      TaperJouer2AppDelegate_iPhone.h
      TaperJouer2AppDelegate_iPhone.m
      en.lproj=en.lproj {
      }
     }
    }
    TaperJouer2.xcodeproj=TaperJouer2.xcodeproj {
     project.xcworkspace=project.xcworkspace {
      xcuserdata=xcuserdata {
       m2sar.xcuserdatad=m2sar.xcuserdatad {
       }
      }
     }
     xcuserdata=xcuserdata {
      m2sar.xcuserdatad=m2sar.xcuserdatad {
       xcdebugger=xcdebugger {
       }
       xcschemes=xcschemes {
        xcschememanagement.plist
       }
      }
     }
    }
   }
   __MACOSX=__MACOSX {
    TaperJouer2=TaperJouer2 {
     TaperJouer2=TaperJouer2 {
      en.lproj=en.lproj {
      }
      iPad=iPad {
       en.lproj=en.lproj {
       }
      }
      iPhone=iPhone {
       en.lproj=en.lproj {
       }
      }
     }
    }
   }
  }
 }
 6=6 {
  IMoods1=IMoods1 {
   IMoods1=IMoods1 {
    IMoods1=IMoods1 {
     EditDetailledViewCtrl.h
     IMoods1AppDelegate.h
     MainCtrl.h
     MyTable.h
     serviceInformation.h
     EditDetailledViewCtrl.m
     IMoods1AppDelegate.m
     main.m
     MainCtrl.m
     MyTable.m
     serviceInformation.m
     IMoods1-Info.plist
     en.lproj=en.lproj {
     }
     iPad=iPad {
      IMoods1AppDelegate_iPad.h
      IMoods1AppDelegate_iPad.m
      en.lproj=en.lproj {
      }
     }
     iPhone=iPhone {
      IMoods1AppDelegate_iPhone.h
      IMoods1AppDelegate_iPhone.m
      en.lproj=en.lproj {
      }
     }
    }
    IMoods1.xcodeproj=IMoods1.xcodeproj {
     project.xcworkspace=project.xcworkspace {
      xcuserdata=xcuserdata {
       m2sar.xcuserdatad=m2sar.xcuserdatad {
       }
      }
     }
     xcuserdata=xcuserdata {
      m2sar.xcuserdatad=m2sar.xcuserdatad {
       xcdebugger=xcdebugger {
       }
       xcschemes=xcschemes {
        xcschememanagement.plist
       }
      }
     }
    }
    Settings.bundle=Settings.bundle {
     Root.plist
     en.lproj=en.lproj {
     }
    }
   }
   __MACOSX=__MACOSX {
    IMoods1=IMoods1 {
     IMoods1=IMoods1 {
      en.lproj=en.lproj {
      }
      iPad=iPad {
       en.lproj=en.lproj {
       }
      }
      iPhone=iPhone {
       en.lproj=en.lproj {
       }
      }
     }
     Settings.bundle=Settings.bundle {
     }
    }
   }
  }
  LocaliseMoi=LocaliseMoi {
   LocaliseMoi=LocaliseMoi {
    LocaliseMoi=LocaliseMoi {
     LocaliseMoiAppDelegate.h
     MainCtrl.h
     LocaliseMoiAppDelegate.m
     main.m
     MainCtrl.m
     LocaliseMoi-Info.plist
     en.lproj=en.lproj {
     }
     iPad=iPad {
      LocaliseMoiAppDelegate_iPad.h
      LocaliseMoiAppDelegate_iPad.m
      en.lproj=en.lproj {
      }
     }
     iPhone=iPhone {
      LocaliseMoiAppDelegate_iPhone.h
      LocaliseMoiAppDelegate_iPhone.m
      en.lproj=en.lproj {
      }
     }
    }
    LocaliseMoi.xcodeproj=LocaliseMoi.xcodeproj {
     project.xcworkspace=project.xcworkspace {
      xcuserdata=xcuserdata {
       m2sar.xcuserdatad=m2sar.xcuserdatad {
       }
      }
     }
     xcuserdata=xcuserdata {
      m2sar.xcuserdatad=m2sar.xcuserdatad {
       xcdebugger=xcdebugger {
       }
       xcschemes=xcschemes {
        xcschememanagement.plist
       }
      }
     }
    }
   }
   __MACOSX=__MACOSX {
    LocaliseMoi=LocaliseMoi {
     LocaliseMoi=LocaliseMoi {
      en.lproj=en.lproj {
      }
      iPad=iPad {
       en.lproj=en.lproj {
       }
      }
      iPhone=iPhone {
       en.lproj=en.lproj {
       }
      }
     }
    }
   }
  }
 }
}








Scheme_WebDiffuse=D:\workspace\scheme CD=. filter="*" {
 serrano_exercices=serrano_exercices {
  cours1_exercices.scm
  cours2_exercices.scm
  presentation.scm
  test.js
  test.ml
  test.scm
  test2.scm
  test3.scm
  testc.scm
 }
 tests=tests {
  2cours.scm
  call_cc.scm
  cons_car_cdr_list.scm
  convert_funcs.scm
  define_let_set.scm
  define_macro.scm
  exception.scm
  foreach.scm
  hex.scm
  if_else_cond_case.scm
  lambda.scm
  length.scm
  let_letEtoile.scm
  loop.scm
  modules.scm
  pair.scm
  predicats.scm
  recursive.scm
  redifinition.scm
  strings.scm
  test3.scm
  testc.scm
  tests.scm
 }
 tests_js=tests_js {
  jsturn.js
  test.js
 }
}
Hop=/workspace/hop_examples CD=. filter="*" {
 1.hop
 2.hop
 2_on_server.hop
 3.hop
 4.hop
 5.hop
 6.hop
 hello.png
 tuto1=tuto1 {
  tuto_01.hop
  tuto_02.hop
  tuto_03.hop
  tuto_04.hop
  with_hop_example.hop
 }
 tuto2_ajax=tuto2_ajax {
  tuto_02.hop
 }
}





FSAFE4=D:\workspace\fsafe4 CD=. filter="*.ml *.mll *.mly" {
 callgraph.ml
 config.ml
 cycle.ml
 debug.ml
 fsafe.ml
 handler.ml
 interpret.ml
 main.ml
 pprinter.ml
 relationmatrix.ml
 termination.ml
 typechecker.ml
 utils.ml
 wftype.ml
 lexer.mll
 parser.mly
 _build=_build {
  fsafe.ml
  handler.ml
  interpret.ml
  lexer.ml
  main.ml
  lexer.mll
  parser.mly
 }
 demo=demo {
 }
 test=test {
  tests_for_matrices.ml
  bad=bad {
  }
  good=good {
  }
 }
}





python_ptest=D:\workspace\eclipse_py\ptest CD=. filter="filter="*.pyx *.py *.js *.vrun *.g" {
 PyParsing=PyParsing {
  Calcul1.py
  hello_world.py
  antlr=antlr {
   Eval.py
   ExprLexer.py
   ExprParser.py
   Test.py
   Eval.g
   Expr.g
  }
  antlr3-python-example=antlr3-python-example {
   Eval.py
   ExprLexer.py
   ExprParser.py
   Test.py
   Eval.g
   Expr.g
   Expr__.g
   antlr3=antlr3 {
    __init__.py
    compat.py
    constants.py
    dfa.py
    exceptions.py
    recognizers.py
    streams.py
    tokens.py
    tree.py
   }
  }
 }
 python_reverse=python_reverse {
  ctypes_my_test.py
  my_debugger.py
  my_debugger_defines.py
  my_test.py
 }
 src=src {
 }
 stl_ue_test=stl_ue_test {
  __init__.py
  01=01 {
   ext_tester.py
   test_bin_dec.py
   ue_test.py
   ue_test_unitTest.py
   specs=specs {
   }
  }
  STL_APR_SVakulenko_test=STL_APR_SVakulenko_test {
   ext_tester.py
   ue_test.py
   specs=specs {
   }
  }
  stl_apr_m2_vakulenko_sergiy=stl_apr_m2_vakulenko_sergiy {
   controller.py
   st_controller.py
   func_test_output=func_test_output {
   }
   struct_test_output=struct_test_output {
   }
  }
 }
 test=test {
  MysqlTest.py
  __init__.py
  amazon_abdr.py
  amazon_simpledb_test.py
  bad_code.py
  bit_operator.py
  classes.py
  excelw.py
  func_test.py
  functionnelle.py
  getTotalTime.py
  ifelseOperations.py
  input_test.py
  multiply_matrix.py
  newbiecontest.py
  pabdr.py
  pabdr2.py
  pabdrN.py
  pplut.py
  sendmail.py
  ssh_kill_process_remote.py
  test.py
  typage.py
  jv.js
  jv2.js
  jv3.js
  brut_force=brut_force {
   pass_brut_force_search.pyx
   check_url.py
   compile.py
   pytest.py
   run.py
   setup.py
   test_file.py
   exemple.js
   exemple_experiment.js
   config.vrun
   build=build {
    temp.win32-2.7=temp.win32-2.7 {
     Release=Release {
     }
    }
   }
  }
 }
}



masm=D:\workspace\masm CD=. filter="*.asm" {
 helloworld.asm
 add_numbers.asm
 add_numbers_2_advanced.asm
}



lex_yacc=D:\workspace\lex_yacc CD=. filter="*.*" {
 comp.c
 interpr.c
 lex.l
 lex.yy.c
 pars.tab.c
 pars.y
 calc3.h
 pars.tab.h
 exemple_how_to_use.txt
}



lex_yacc=/mnt/d/workspace/eclipse_lnx_android CD=. filter="*.*" {
 1=1 {
  AndroidManifest.xml
  proguard-project.txt
  project.properties
  assets=assets {
  }
  bin=bin {
   1.apk
   classes.dex
   jarlist.cache
   resources.ap_
   classes=classes {
    your=your {
     packasge=packasge {
      namespaces=namespaces {
       BuildConfig.class
       R$attr.class
       R$drawable.class
       R$layout.class
       R$string.class
       R.class
       SActivity.class
      }
     }
    }
   }
   res=res {
    drawable-hdpi=drawable-hdpi {
     ic_launcher.png
    }
    drawable-ldpi=drawable-ldpi {
     ic_launcher.png
    }
    drawable-mdpi=drawable-mdpi {
     ic_launcher.png
    }
    drawable-xhdpi=drawable-xhdpi {
     ic_launcher.png
    }
   }
  }
  gen=gen {
   your=your {
    packasge=packasge {
     namespaces=namespaces {
      BuildConfig.java
      R.java
     }
    }
   }
  }
  res=res {
   drawable-hdpi=drawable-hdpi {
    ic_launcher.png
   }
   drawable-ldpi=drawable-ldpi {
    ic_launcher.png
   }
   drawable-mdpi=drawable-mdpi {
    ic_launcher.png
   }
   drawable-xhdpi=drawable-xhdpi {
    ic_launcher.png
   }
   layout=layout {
    main.xml
   }
   values=values {
    strings.xml
   }
  }
  src=src {
   your=your {
    packasge=packasge {
     namespaces=namespaces {
      SActivity.java
     }
    }
   }
  }
 }
 JNI_tuto_01=JNI_tuto_01 {
  bin=bin {
   com=com {
    packtpub=packtpub {
    }
   }
  }
  src=src {
   com=com {
    packtpub=packtpub {
    }
   }
  }
 }
 Store=Store {
  AndroidManifest.xml
  proguard-project.txt
  project.properties
  assets=assets {
  }
  bin=bin {
   Store.apk
   classes.dex
   jarlist.cache
   resources.ap_
   classes=classes {
    com=com {
     packtpub=packtpub {
      BuildConfig.class
      R$attr.class
      R$drawable.class
      R$id.class
      R$layout.class
      R$string.class
      R.class
      Store.class
      StoreActivity.class
      StoreType.class
     }
    }
   }
   res=res {
    drawable-hdpi=drawable-hdpi {
     ic_launcher.png
    }
    drawable-ldpi=drawable-ldpi {
     ic_launcher.png
    }
    drawable-mdpi=drawable-mdpi {
     ic_launcher.png
    }
    drawable-xhdpi=drawable-xhdpi {
     ic_launcher.png
    }
   }
  }
  gen=gen {
   com=com {
    packtpub=packtpub {
     BuildConfig.java
     R.java
    }
   }
  }
  jni=jni {
  }
  res=res {
   drawable-hdpi=drawable-hdpi {
    ic_launcher.png
   }
   drawable-ldpi=drawable-ldpi {
    ic_launcher.png
   }
   drawable-mdpi=drawable-mdpi {
    ic_launcher.png
   }
   drawable-xhdpi=drawable-xhdpi {
    ic_launcher.png
   }
   layout=layout {
    main.xml
   }
   values=values {
    strings.xml
   }
  }
  src=src {
   com=com {
    packtpub=packtpub {
     Store.java
     StoreActivity.java
     StoreType.java
    }
   }
  }
 }
}




lex_yacc=/mnt/d/workspace/eclipse_lnx_android CD=. filter="*.xml *.c *.h *.cpp *.hpp *.java" {
 1=1 {
  AndroidManifest.xml
  assets=assets {
  }
  bin=bin {
   classes=classes {
    your=your {
     packasge=packasge {
      namespaces=namespaces {
      }
     }
    }
   }
   res=res {
    drawable-hdpi=drawable-hdpi {
    }
    drawable-ldpi=drawable-ldpi {
    }
    drawable-mdpi=drawable-mdpi {
    }
    drawable-xhdpi=drawable-xhdpi {
    }
   }
  }
  gen=gen {
   your=your {
    packasge=packasge {
     namespaces=namespaces {
      BuildConfig.java
      R.java
     }
    }
   }
  }
  res=res {
   drawable-hdpi=drawable-hdpi {
   }
   drawable-ldpi=drawable-ldpi {
   }
   drawable-mdpi=drawable-mdpi {
   }
   drawable-xhdpi=drawable-xhdpi {
   }
   layout=layout {
    main.xml
   }
   values=values {
    strings.xml
   }
  }
  src=src {
   your=your {
    packasge=packasge {
     namespaces=namespaces {
      SActivity.java
     }
    }
   }
  }
 }
 JNI_tuto_01=JNI_tuto_01 {
  bin=bin {
   com=com {
    packtpub=packtpub {
    }
   }
  }
  src=src {
   com=com {
    packtpub=packtpub {
    }
   }
  }
 }
 Store=Store {
  AndroidManifest.xml
  assets=assets {
  }
  bin=bin {
   classes=classes {
    com=com {
     packtpub=packtpub {
     }
    }
   }
   res=res {
    drawable-hdpi=drawable-hdpi {
    }
    drawable-ldpi=drawable-ldpi {
    }
    drawable-mdpi=drawable-mdpi {
    }
    drawable-xhdpi=drawable-xhdpi {
    }
   }
  }
  gen=gen {
   com=com {
    packtpub=packtpub {
     BuildConfig.java
     R.java
    }
   }
  }
  jni=jni {
   Store.c
   com_packtpub_Store.c
   Store.h
   com_packtpub_Store.h
  }
  res=res {
   drawable-hdpi=drawable-hdpi {
   }
   drawable-ldpi=drawable-ldpi {
   }
   drawable-mdpi=drawable-mdpi {
   }
   drawable-xhdpi=drawable-xhdpi {
   }
   layout=layout {
    main.xml
   }
   values=values {
    strings.xml
   }
  }
  src=src {
   com=com {
    packtpub=packtpub {
     Store.java
     StoreActivity.java
     StoreType.java
    }
   }
  }
 }
}




django_mysite=/home/sergey/workspace/aptna/mysite/mysite CD=. filter="*.*" {
 __init__.py
 manage.py
 settings.py
 urls.py
 polls=polls {
  __init__.py
  admin.py
  models.py
  tests.py
  views.py
 }
 templates=templates {
  admin=admin {
   base_site.html
  }
  polls=polls {
    index.html
    detail.html
    results.html
  }
 }
}
django_sample=/home/sergey/workspace/django/sample CD=. filter="*.*" {
 __init__.py
 manage.py
 settings.py
 urls.py
 views.py
 clock_skew.py
 static=static {
  css=css {
  }
  images=images {
  }
  js=js {

   clock_skew.js
  }
 }
 templates=templates {
  base.html
  clockskew.html
  index.html
  russian.html
  main.html
  
 }
}
django_apress_webblog=/home/sergey/workspace/django/apress/webblog CD=. filter="*.*" {
 __init__.py
 database.sqlite
 manage.py
 settings.py
 urls.py
 search=search {
  __init__.py
  models.py
  tests.py
  views.py
 }
 templates=templates {
  admin=admin {
   flatpages=flatpages {
    flatpage=flatpage {
     change_form.html
    }
   }
  }
  flatpages=flatpages {
   default.html
  }
  search=search {
   search.html
  }
 }
}
django_apress_ppdlive=/home/sergey/workspace/django/ppdlive CD=. filter="*.py *.txt *.html *.css *.js" {
 __init__.py
 global_vars.py
 manage.py
 settings.py
 snippets.py
 urls.py
 site.txt
 1=1 {
  1.txt
 }
 mynotes=mynotes {
  __init__.py
  admin.py
  models.py
  tests.py
  views.py
 }
 polls=polls {
  __init__.py
  admin.py
  models.py
  tests.py
  views.py
  migrations=migrations {
   0001_initial.py
   __init__.py
  }
 }
 siteapp=siteapp {
  __init__.py
  models.py
  tests.py
  views.py
  migrations=migrations {
   0001_initial.py
   0002_initial.py
   __init__.py
  }
  templatetags=templatetags {
   __init__.py
   siteapp_extras.py
  }
 }
 static=static {
  css=css {
   fonts_settings.css
   master_page.css
  }
  images=images {
  }
  js=js {
   textareas.js
   tinymce=tinymce {
    www=www {
     example.html
     tiny_mce.js
     tiny_mce_popup.js
     tiny_mce_src.js
     langs=langs {
      en.js
     }
     plugins=plugins {
      advhr=advhr {
       editor_plugin.js
       editor_plugin_src.js
       css=css {
        advhr.css
       }
       js=js {
        rule.js
       }
       langs=langs {
        en_dlg.js
       }
      }
      advimage=advimage {
       editor_plugin.js
       editor_plugin_src.js
       css=css {
        advimage.css
       }
       img=img {
       }
       js=js {
        image.js
       }
       langs=langs {
        en_dlg.js
       }
      }
      advlink=advlink {
       editor_plugin.js
       editor_plugin_src.js
       css=css {
        advlink.css
       }
       js=js {
        advlink.js
       }
       langs=langs {
        en_dlg.js
       }
      }
      advlist=advlist {
       editor_plugin.js
       editor_plugin_src.js
      }
      autolink=autolink {
       editor_plugin.js
       editor_plugin_src.js
      }
      autoresize=autoresize {
       editor_plugin.js
       editor_plugin_src.js
      }
      autosave=autosave {
       editor_plugin.js
       editor_plugin_src.js
       langs=langs {
        en.js
       }
      }
      bbcode=bbcode {
       editor_plugin.js
       editor_plugin_src.js
      }
      contextmenu=contextmenu {
       editor_plugin.js
       editor_plugin_src.js
      }
      directionality=directionality {
       editor_plugin.js
       editor_plugin_src.js
      }
      emotions=emotions {
       editor_plugin.js
       editor_plugin_src.js
       img=img {
       }
       js=js {
        emotions.js
       }
       langs=langs {
        en_dlg.js
       }
      }
      example=example {
       editor_plugin.js
       editor_plugin_src.js
       img=img {
       }
       js=js {
        dialog.js
       }
       langs=langs {
        en.js
        en_dlg.js
       }
      }
      example_dependency=example_dependency {
       editor_plugin.js
       editor_plugin_src.js
      }
      fullpage=fullpage {
       editor_plugin.js
       editor_plugin_src.js
       css=css {
        fullpage.css
       }
       js=js {
        fullpage.js
       }
       langs=langs {
        en_dlg.js
       }
      }
      fullscreen=fullscreen {
       editor_plugin.js
       editor_plugin_src.js
      }
      iespell=iespell {
       editor_plugin.js
       editor_plugin_src.js
      }
      inlinepopups=inlinepopups {
       editor_plugin.js
       editor_plugin_src.js
       skins=skins {
        clearlooks2=clearlooks2 {
         window.css
         img=img {
         }
        }
       }
      }
      insertdatetime=insertdatetime {
       editor_plugin.js
       editor_plugin_src.js
      }
      layer=layer {
       editor_plugin.js
       editor_plugin_src.js
      }
      legacyoutput=legacyoutput {
       editor_plugin.js
       editor_plugin_src.js
      }
      lists=lists {
       editor_plugin.js
       editor_plugin_src.js
      }
      media=media {
       editor_plugin.js
       editor_plugin_src.js
       css=css {
        media.css
       }
       js=js {
        embed.js
        media.js
       }
       langs=langs {
        en_dlg.js
       }
      }
      nonbreaking=nonbreaking {
       editor_plugin.js
       editor_plugin_src.js
      }
      noneditable=noneditable {
       editor_plugin.js
       editor_plugin_src.js
      }
      pagebreak=pagebreak {
       editor_plugin.js
       editor_plugin_src.js
      }
      paste=paste {
       editor_plugin.js
       editor_plugin_src.js
       js=js {
        pastetext.js
        pasteword.js
       }
       langs=langs {
        en_dlg.js
       }
      }
      preview=preview {
       example.html
       preview.html
       editor_plugin.js
       editor_plugin_src.js
       jscripts=jscripts {
        embed.js
       }
      }
      print=print {
       editor_plugin.js
       editor_plugin_src.js
      }
      save=save {
       editor_plugin.js
       editor_plugin_src.js
      }
      searchreplace=searchreplace {
       editor_plugin.js
       editor_plugin_src.js
       css=css {
        searchreplace.css
       }
       js=js {
        searchreplace.js
       }
       langs=langs {
        en_dlg.js
       }
      }
      spellchecker=spellchecker {
       editor_plugin.js
       editor_plugin_src.js
       css=css {
        content.css
       }
       img=img {
       }
      }
      style=style {
       editor_plugin.js
       editor_plugin_src.js
       css=css {
        props.css
       }
       js=js {
        props.js
       }
       langs=langs {
        en_dlg.js
       }
      }
      tabfocus=tabfocus {
       editor_plugin.js
       editor_plugin_src.js
      }
      table=table {
       editor_plugin.js
       editor_plugin_src.js
       css=css {
        cell.css
        row.css
        table.css
       }
       js=js {
        cell.js
        merge_cells.js
        row.js
        table.js
       }
       langs=langs {
        en_dlg.js
       }
      }
      template=template {
       editor_plugin.js
       editor_plugin_src.js
       css=css {
        template.css
       }
       js=js {
        template.js
       }
       langs=langs {
        en_dlg.js
       }
      }
      visualchars=visualchars {
       editor_plugin.js
       editor_plugin_src.js
      }
      wordcount=wordcount {
       editor_plugin.js
       editor_plugin_src.js
      }
      xhtmlxtras=xhtmlxtras {
       editor_plugin.js
       editor_plugin_src.js
       css=css {
        attributes.css
        popup.css
       }
       js=js {
        abbr.js
        acronym.js
        attributes.js
        cite.js
        del.js
        element_common.js
        ins.js
       }
       langs=langs {
        en_dlg.js
       }
      }
     }
     themes=themes {
      advanced=advanced {
       editor_template.js
       editor_template_src.js
       img=img {
       }
       js=js {
        about.js
        anchor.js
        charmap.js
        color_picker.js
        image.js
        link.js
        source_editor.js
       }
       langs=langs {
        en.js
        en_dlg.js
       }
       skins=skins {
        default=default {
         content.css
         dialog.css
         ui.css
         img=img {
         }
        }
        highcontrast=highcontrast {
         content.css
         dialog.css
         ui.css
        }
        o2k7=o2k7 {
         content.css
         dialog.css
         ui.css
         ui_black.css
         ui_silver.css
         img=img {
         }
        }
       }
      }
      simple=simple {
       editor_template.js
       editor_template_src.js
       img=img {
       }
       langs=langs {
        en.js
       }
       skins=skins {
        default=default {
         content.css
         ui.css
        }
        o2k7=o2k7 {
         content.css
         ui.css
         img=img {
         }
        }
       }
      }
     }
     utils=utils {
      editable_selects.js
      form_utils.js
      mctabs.js
      validate.js
     }
    }
   }
  }
 }
 templates=templates {
  polls=polls {
   poll.html
  }
  siteapp=siteapp {
   master_page.html
  }
 }
}


js=/home/sergey/workspace/js_pface CD=. filter="*.js *.html *.css *.swf *.m4v" {
 countryform.html
 index.html
 myplayer.html
 images=images {
  flags=flags {
  }
 }
 res=res {
  jquery-1.7.2.min.js
  css=css {
   chefetatform.css
   myutils.css
  }
  jplayer=jplayer {
   js=js {
    circle.player.js
    jplayer.playlist.min.js
    jquery.grab.js
    jquery.jplayer.inspector.js
    jquery.jplayer.min.js
    jquery.transform.js
    mod.csstransforms.min.js
    Jplayer.swf
   }
   skin=skin {
    blue.monday=blue.monday {
     jplayer.blue.monday.css
    }
    circle.skin=circle.skin {
     circle.player.css
    }
    pink.flag=pink.flag {
     jplayer.pink.flag.css
    }
   }
  }
  js=js {
   mymaps.js
   myplayer.js
   myutils.js
  }
 }
 test=test {
  jptest.js
  polygoncool.js
  test.js
  testpoly.js
  testpolyarr.js
  hide_test.html
  jptest.html
  modal-window.html
  testplayer.html
  html=html {
   myplayer_div.js
  }
 }
 video=video {
 }
}
